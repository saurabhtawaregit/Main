trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

variables:
  - group: sf-credentials git

jobs:
  - job: ValidateOnPR
    displayName: Validate changes on PR creation
    condition: eq(variables['Build.Reason'], 'PullRequest')
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
        fetchDepth: 0

      - task: UseNode@1
        inputs:
          version: 17.x

      - script: |
          npm install --global sfdx-cli
        displayName: Install Salesforce CLI

      - task: DownloadSecureFile@1
        name: opensslCertificate
        displayName: Download OpenSSL Certificate
        inputs:
          secureFile: server.key

      - bash: |
          sfdx force:auth:jwt:grant --clientid $(clientId) --jwtkeyfile $(opensslCertificate.secureFilePath) --username $(userName) --instanceurl $(instanceUrl) -a TargetOrg
        displayName: Authorize Salesforce Org

      - bash: |
          echo y | sfdx plugins:install sfdx-git-delta
        displayName: Install sfdx-git-delta plugin

      - bash: |
          sfdx sgd:source:delta --to HEAD --output . --ignore .gitignore
        displayName: Check for delta changes

      - bash: |
          cat package/package.xml
        displayName: Show generated delta of package.xml

      - bash: |
          cat destructiveChanges/destructiveChanges.xml
        displayName: Show destructiveChanges.xml

      - bash: |
          TEST_CLASSES=$(tr '\n' ' ' < test-classes.txt)
          sfdx force:source:deploy --ignorewarnings --manifest package/package.xml --checkonly --testlevel RunSpecifiedTests --runtests $TEST_CLASSES --targetusername TargetOrg --postdestructivechanges destructiveChanges/destructiveChanges.xml --wait 40
        displayName: Run validation on source code

  - job: DeployOnMain
    displayName: Deploy changes on merge to main branch
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
        fetchDepth: 0

      - task: UseNode@1
        inputs:
          version: 17.x

      - script: |
          npm install --global sfdx-cli
        displayName: Install Salesforce CLI

      - task: DownloadSecureFile@1
        name: opensslCertificate
        displayName: Download OpenSSL Certificate
        inputs:
          secureFile: server.key

      - bash: |
          sfdx force:auth:jwt:grant --clientid $(clientId) --jwtkeyfile $(opensslCertificate.secureFilePath) --username $(userName) --instanceurl $(instanceUrl) -a TargetOrg
        displayName: Authorize Salesforce Org

      - bash: |
          echo y | sfdx plugins:install sfdx-git-delta
        displayName: Install sfdx-git-delta plugin

      - bash: |
          sfdx sgd:source:delta --to HEAD --output . --ignore .gitignore
        displayName: Check for delta changes

      - bash: |
          cat package/package.xml
        displayName: Show generated delta of package.xml

      - bash: |
          cat destructiveChanges/destructiveChanges.xml
        displayName: Show destructiveChanges.xml

      - bash: |
          TEST_CLASSES=$(tr '\n' ' ' < test-classes.txt)
          sfdx force:source:deploy --ignorewarnings --manifest package/package.xml --checkonly --testlevel RunSpecifiedTests --runtests $TEST_CLASSES --targetusername TargetOrg --postdestructivechanges destructiveChanges/destructiveChanges.xml --wait 40
        displayName: Run validation on source code

      - bash: |
          TEST_CLASSES=$(tr '\n' ' ' < test-classes.txt)
          sfdx force:source:deploy --ignorewarnings --manifest package/package.xml --testlevel RunSpecifiedTests --runtests $TEST_CLASSES --targetusername TargetOrg --postdestructivechanges destructiveChanges/destructiveChanges.xml --wait 40
        displayName: Deploy source code to target org
